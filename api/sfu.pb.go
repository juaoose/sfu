// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: sfu.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*Signal_OfferSdp
	//	*Signal_AnswerSdp
	//	*Signal_Trickle
	Payload isSignal_Payload `protobuf_oneof:"payload"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{0}
}

func (m *Signal) GetPayload() isSignal_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Signal) GetOfferSdp() string {
	if x, ok := x.GetPayload().(*Signal_OfferSdp); ok {
		return x.OfferSdp
	}
	return ""
}

func (x *Signal) GetAnswerSdp() string {
	if x, ok := x.GetPayload().(*Signal_AnswerSdp); ok {
		return x.AnswerSdp
	}
	return ""
}

func (x *Signal) GetTrickle() string {
	if x, ok := x.GetPayload().(*Signal_Trickle); ok {
		return x.Trickle
	}
	return ""
}

type isSignal_Payload interface {
	isSignal_Payload()
}

type Signal_OfferSdp struct {
	OfferSdp string `protobuf:"bytes,1,opt,name=offer_sdp,json=offerSdp,proto3,oneof"`
}

type Signal_AnswerSdp struct {
	AnswerSdp string `protobuf:"bytes,2,opt,name=answer_sdp,json=answerSdp,proto3,oneof"`
}

type Signal_Trickle struct {
	Trickle string `protobuf:"bytes,3,opt,name=trickle,proto3,oneof"`
}

func (*Signal_OfferSdp) isSignal_Payload() {}

func (*Signal_AnswerSdp) isSignal_Payload() {}

func (*Signal_Trickle) isSignal_Payload() {}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operation:
	//	*Request_Key
	//	*Request_Signal
	Operation isRequest_Operation `protobuf_oneof:"operation"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{1}
}

func (m *Request) GetOperation() isRequest_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *Request) GetKey() string {
	if x, ok := x.GetOperation().(*Request_Key); ok {
		return x.Key
	}
	return ""
}

func (x *Request) GetSignal() *Signal {
	if x, ok := x.GetOperation().(*Request_Signal); ok {
		return x.Signal
	}
	return nil
}

type isRequest_Operation interface {
	isRequest_Operation()
}

type Request_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type Request_Signal struct {
	Signal *Signal `protobuf:"bytes,2,opt,name=signal,proto3,oneof"`
}

func (*Request_Key) isRequest_Operation() {}

func (*Request_Signal) isRequest_Operation() {}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal *Signal `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sfu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_sfu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_sfu_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

var File_sfu_proto protoreflect.FileDescriptor

var file_sfu_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x66, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x22, 0x6f, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x73, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x64, 0x70, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x73, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x64, 0x70, 0x12, 0x1a, 0x0a, 0x07, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x74,
	0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x51, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x32, 0x32, 0x0a, 0x03, 0x53, 0x46, 0x55, 0x12, 0x2b, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x2f,
	0x73, 0x66, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sfu_proto_rawDescOnce sync.Once
	file_sfu_proto_rawDescData = file_sfu_proto_rawDesc
)

func file_sfu_proto_rawDescGZIP() []byte {
	file_sfu_proto_rawDescOnce.Do(func() {
		file_sfu_proto_rawDescData = protoimpl.X.CompressGZIP(file_sfu_proto_rawDescData)
	})
	return file_sfu_proto_rawDescData
}

var file_sfu_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sfu_proto_goTypes = []interface{}{
	(*Signal)(nil),   // 0: api.Signal
	(*Request)(nil),  // 1: api.Request
	(*Response)(nil), // 2: api.Response
}
var file_sfu_proto_depIdxs = []int32{
	0, // 0: api.Request.signal:type_name -> api.Signal
	0, // 1: api.Response.signal:type_name -> api.Signal
	1, // 2: api.SFU.Signal:input_type -> api.Request
	2, // 3: api.SFU.Signal:output_type -> api.Response
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sfu_proto_init() }
func file_sfu_proto_init() {
	if File_sfu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sfu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sfu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sfu_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Signal_OfferSdp)(nil),
		(*Signal_AnswerSdp)(nil),
		(*Signal_Trickle)(nil),
	}
	file_sfu_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Request_Key)(nil),
		(*Request_Signal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sfu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sfu_proto_goTypes,
		DependencyIndexes: file_sfu_proto_depIdxs,
		MessageInfos:      file_sfu_proto_msgTypes,
	}.Build()
	File_sfu_proto = out.File
	file_sfu_proto_rawDesc = nil
	file_sfu_proto_goTypes = nil
	file_sfu_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SFUClient is the client API for SFU service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SFUClient interface {
	Signal(ctx context.Context, opts ...grpc.CallOption) (SFU_SignalClient, error)
}

type sFUClient struct {
	cc grpc.ClientConnInterface
}

func NewSFUClient(cc grpc.ClientConnInterface) SFUClient {
	return &sFUClient{cc}
}

func (c *sFUClient) Signal(ctx context.Context, opts ...grpc.CallOption) (SFU_SignalClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SFU_serviceDesc.Streams[0], "/api.SFU/Signal", opts...)
	if err != nil {
		return nil, err
	}
	x := &sFUSignalClient{stream}
	return x, nil
}

type SFU_SignalClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type sFUSignalClient struct {
	grpc.ClientStream
}

func (x *sFUSignalClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sFUSignalClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SFUServer is the server API for SFU service.
type SFUServer interface {
	Signal(SFU_SignalServer) error
}

// UnimplementedSFUServer can be embedded to have forward compatible implementations.
type UnimplementedSFUServer struct {
}

func (*UnimplementedSFUServer) Signal(SFU_SignalServer) error {
	return status.Errorf(codes.Unimplemented, "method Signal not implemented")
}

func RegisterSFUServer(s *grpc.Server, srv SFUServer) {
	s.RegisterService(&_SFU_serviceDesc, srv)
}

func _SFU_Signal_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SFUServer).Signal(&sFUSignalServer{stream})
}

type SFU_SignalServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type sFUSignalServer struct {
	grpc.ServerStream
}

func (x *sFUSignalServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sFUSignalServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SFU_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.SFU",
	HandlerType: (*SFUServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Signal",
			Handler:       _SFU_Signal_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "sfu.proto",
}
